' Gambas class file

Public sLang As String = ((Left(System.Language, 2)))
Public sGroup_Cat As String = M_Var_Global.sGroup_Cat
Private sText As String
Private sTextCom As String
Private sDir_AppsFav As String 
Private sFile_AppsFav As String
'Private iSizeAppsFav As Integer = 96
Private hToggle_AppS As CButton
Private ImgButtonApps As PushButton
Private DesktopEntry As DesktopFile
Private sDir As String
Private sDelBook As String
Public Settings_Core_Innova As New Settings(Desktop.ConfigDir &/ "Innova/Innova_Config.conf")
Private $hLogo As Image
Private sDel As String
Private iResult As Integer

Public Sub _new()
  
  'Dim hWatch As Timer
  
  ' hWatch = New Timer As "WatchTimer"
  ' hWatch.Delay = 50
  ' hWatch.Start
  ' Print "a"
  'imgBackground.Resize(Desktop.W, Desktop.h)
  
  f_launcher.txtSearchApps.SetFocus
  PanInfo.W = VBoxApps.W * 1.3
  
  'Application.ActiveWindow
  
End

Public Sub Form_Open()
  
  Dim sResult As String
  
  M_Theme.Show_Theme
  
  M_OBS_Global.Add(Me)
  M_Core.FillList_Cat
  'm_core.FillList_All("gambas")
  
  btnPower.Image = Picture["img/shutdown/shutdown_logo.png"].Image
  
  txtSearchApps.Background = Color.Transparent
  
  initColor
  Me.Maximized = True
  'Me.Width = Desktop.Width 
  'Me.Height = Desktop.Height
  ' Me.Center
  ScrollApps.expand = True 
  ScrollApps.arrangement = Arrange.Row
  
  m_core.Show_Opacity_Launcher
  m_core.Show_Background_Launcher
  m_core.Show_Cat_Hide_Launcher
  
  '' ScrollCat.Background = Color.Transparent
  VBoxCat.Background = Color.Transparent
  
  'Settings_Core_Innova.Reload()
  
  Settings_Core_Innova.Write(f_launcher)
  Settings_Core_Innova["Launcher/iShow"] = "1"
  Settings_Core_Innova.Save
  
  'Settings_Core_Innova.Reload
  iResult = Settings_Core_Innova["Launcher/iShow", f_launcher]
  
  If iResult = 1 Then
    ' Me.Show
  Else    
    'Me.Close
    
  Endif
  
End

Private Sub initColor()
  
  ' ScrollApps.Background = Color.Transparent
  VBoxApps.Background = Color.Transparent
  
  'PanInfo.Background = Color.Transparent
  ' txtlabelInfo.Background = Color.Transparent
  ' VBoxCat.Background = Color.Transparent
  
End

Public Sub txtSearchApps_Change()
  
  txtSearchApps.Text = Lower$((txtSearchApps.text))
  m_core.FillList_All(Last.text)
  
End

Public Sub ViewCat_MouseMove()
  
  ' If Not ViewCat.FindAt(Mouse.x, Mouse.y) Then
  '   ViewCat.Mouse = Mouse.Pointing
  '   'ViewCat.Tooltip = m_core.GetAppNameCat(Last.Item.Key, m_core.LANG)
  '   sText = m_core.GetAppNameCat(Last.Item.Key, m_core.LANG)
  '   txtlabelInfo.Text = (Html(sText))
  '   'M_Core.sCurCat = ViewCat.Item.Text
  '   M_Core.sCurCat = DesktopAppsCat[Last.Item.key].Name
  '   M_Core.FillList_Apps
  '   initColor
  ' Endif
  
  'Catch
  
End

Public Sub txtSearchApps_KeyRelease()
  
  If Key.Code = Key.Down Then
    '   ViewCat.SetFocus
  Endif
  
End

Public Sub btnPower_MouseDown()
  
  'Me.Close
  f_power.ShowModal
  
End

Public Sub mnuSwitchUser_Click()
  
  Dim sUser As String
  
  Shell "whoami" To sUser
  Shell "pkill -KILL -u " & sUser
  
End

Public Sub Form_Leave()
  
  'If Me.Activate = True Then
  '  Me.Close
  '  Return
  'Endif
  '  f_launcher.Visible = If(f_launcher.Visible = 0, 1, 0)  
  
End

Public Sub ViewCat_Select()
  
  sText = m_core.GetAppNameCat(Last.Item.Key, m_core.LANG)
  txtlabelInfo.Text = (Html(sText))
  M_Core.sCurCat = DesktopAppsCat[Last.Item.key].Name
  M_Core.FillList_Apps
Catch
  
End

Public Sub mnuLink_Click()
  
  Dim Copy_Apps As String
  Dim sSend As String 
  Dim sFile_Origen As String = "/usr/share/applications/" & M_Core.sSendApps & ".desktop"
  Dim sFile_Origen_KDE As String = "/usr/share/applications/kde4/" & M_Core.sSendApps & ".desktop"
  Dim sDest As String
  
  sDest = Desktop.GetDirectory("DESKTOP")
  'sDest = Desktop.ConfigDir &/ "Innova/Panel/Apps"
  
  Copy_Apps = "cp -r " & sFile_Origen & " " & sDest 
  Shell Copy_Apps Wait
  
  Copy_Apps = "cp -r " & sFile_Origen_KDE & " " & sDest 
  Shell Copy_Apps Wait
  
  '  f_wallpaper.ivwDesktop.Refresh
  
  ' f_panel.sRefresh_DellApps
  
End

Public Sub mnuSend_Click()
  
  Dim sSend As String = Desktop.ConfigDir &/ "Innova/Panel/Apps"
  Dim sFile As String = M_Core.sSendApps & ".desktop"
  Dim sDir As String
  Dim sCopy As String
  
  'Dim Copy_Apps As String
  'Dim sSend As String = Desktop.ConfigDir &/ "Innova/Panel/Apps"
  'Dim sFile_Origen As String = "/usr/share/applications/" & M_Core.sSendApps & ".desktop"
  'Dim sFile_Origen_KDE As String = "/usr/share/applications/kde4/" & M_Core.sSendApps & ".desktop"
  '
  'Print M_Core.sSendApps 
  
  ' Copy_Apps = "cp -r " & sFile_Origen & " " & sSend 
  ' Shell Copy_Apps Wait
  ' 
  'Copy_Apps = "cp -r " & sFile_Origen_KDE & " " & sSend 
  ' Shell Copy_Apps Wait
  ' For Each sDir In ["/usr/share/themes/applications/", Desktop.DataDir &/ "applications/"]
  '   sCopy = "cp -r " & sDir & sFile & " " & sSend 
  '   Shell sCopy Wait
  '   
  ' Next
  
  ' f_panel.sRefresh_DellApps
  M_Core.SendPanel
  
End

Public Sub Form_KeyPress()
  
  '  Object.Unlock(f_launcher)
  If Key.Code = Key.Esc Then
    Me.Close
  Endif
  
End

Public Sub App_Fav_Select(Optional sFilter As String)
  
  Dim pIcon As Picture
  Dim iSizeApps As Integer
  Dim iResult_Text As Integer
  
  iResult_Text = Settings_Core_Innova["Launcher/Show_Text"]
  sDir_AppsFav = Desktop.ConfigDir &/ "Innova/App_Bookmark"
  'sDir_AppsFav = Desktop.ConfigDir &/ "Innova/App_Favorites"
  
  iSizeApps = Settings_Core_Innova["Launcher/Icon_Size"]
  
  ScrollApps.Children.Clear
  For Each sFile_AppsFav In Dir(sDir_AppsFav, "*.desktop").Sort(gb.IgnoreCase)
    DesktopEntry = New DesktopFile(sDir_AppsFav &/ sFile_AppsFav)
    pIcon = M_DesktopEntry[DesktopEntry.Path, 48].Image.Stretch(iSizeApps, iSizeApps).Picture
    
    ImgButtonApps = New PushButton(ScrollApps) As "CButtonApps"
    ImgButtonApps.w = iSizeApps 'iSize
    ImgButtonApps.h = iSizeApps 'iSize
    ImgButtonApps.Mouse = 13
    ImgButtonApps.Picture = pIcon.Image.Picture
    If iResult_Text = 0 Then
      ImgButtonApps.Text = Null
    Else
      ImgButtonApps.Text = DesktopEntry.Name 'GetAppName(s, LANG)  
    Endif
    
    ImgButtonApps.Foreground = (M_Core.sFontColor) 
    'ImgButtonApps.Font.Size = (M_Core.iFontSize)
    ImgButtonApps.Font.Name = (M_Core.sFontName)
    sDel = DesktopEntry.Path
    ' ImgButtonApps.Font.Size = 8
    'ImgButtonApps.Foreground = &00E9E9E9 '&003F3F3F 'Color.White
    ImgButtonApps.Tag = DesktopEntry.Path
    ImgButtonApps.Tooltip = DesktopEntry.Comment
    
  Next
  
Catch
  
End

Private Sub runDesktopFile(sPath As String)
  
  Dim sDesktopFile As New DesktopFile(sPath)
  Dim $CmdArray As String[] = Split(sDesktopFile.Exec, " ", "")
  
  Try Shell $CmdArray[0]
  
End

Public Sub CButtonApps_Click()
  
  Dim sExec As String = Last.tag
  
  runDesktopFile(sExec)
  Me.Close
  
End

Public Sub CButtonApps_Enter()
  
  Dim sTextNam As String = (Last.Text)
  Dim sTextCom As String = (Last.Tooltip)
  Dim sExec As String = Last.tag
  
  f_launcher.txtnameapp.Text = (Html(sTextNam)) 
  f_launcher.txtlabelInfo.Text = (Html(sTextCom))
  f_launcher.Pic_Logo_PreviewApp.Picture = Last.Picture
  
  'sSendApps = Last.Tag
  
End

Public Sub CButtonApps_Menu()
  
  sDel = Last.tag
  
  M_Core.iShow = True
  mnuDel_Bookmark.Popup()
  
  'Print sDel
  ' Shell "rm -r " & sFile
  'f_launcher.ScrollApps.Children.Clear
  'Wait 0.1
  'App_Fav_Select
  
End

Public Sub btnBookmark_Enter()
  
  App_Fav_Select
  
End

Public Sub Dimenciones()
  
  Dim i As Integer
  Dim ii As Integer
  Dim W As Integer
  
  Pansearch.w = VBoxApps.w
  PanApps.w = VBoxApps.w
  
  i = VBoxApps.w / 2
  
  ii = (VBoxApps.w - i) / 2.5
  PansepApps1.W = ii
  PansepApps2.W = ii
  ScrollApps.h = VBoxApps.h / 1.4
  
  'ORIGINAL PanInfo.x = Desktop.X + (PanApps.W - PanInfo.W - 5)
  'ORIGINAL PanInfo.Y = Desktop.Y + (PanApps.H * 1.3)
  
  PanInfo.x = Desktop.X + (PanApps.W - PanInfo.W - 5)
  
  PanInfo.Y = Desktop.Y + (PanApps.H * 1.3)
  
  'PanInfo.Y = Desktop.Y + (PanApps.H * 1.32)
  
  'PanInfo.y = Desktop.Width - (VBoxCat.h * 0.9)
  
  'PanInfo.x = PanApps.ScreenX + Me.X - (PanInfo.h * 1.1)
  'W += VBoxApps.W + Desktop.Scale 
  'PanInfo.W = W
  
  'PanInfo.x = PanApps.ScreenX + Me.X - (PanInfo.h * 1.1)
  'PanInfo.Y = PanApps.ScreenY + Me.Y + (PanInfo.w / 2.2)
  'PanInfo.h = 70
  'PanInfo.w = 864
  
End

Public Sub mnuOpen_Click()
  
  DesktopApps[M_Core.sAppsExec].Exec
  
End

Public Sub Form_Resize()
  
  Dimenciones
  
End

Public Sub Form_GotFocus()
  
  Me.SetFocus
  
End

Public Sub SetFocus()
  
  If txtSearchApps.Visible And If Not txtSearchApps.ReadOnly Then
    txtSearchApps.SetFocus
  Else
    txtSearchApps.SetFocus
  Endif
  
End

Public Sub Form_Deactivate()
  
  'If f_launcher.mnuApps.Visible = True Then
  ' f_launcher.Show
  '  Print "show"
  'Else
  'Print "clsoe"
  
  If m_core.iShow = True Then
    f_launcher.show
  Endif
  
  If m_core.iShow = False Then
    f_launcher.Close
  Endif
  M_Core.iShow = False
  
  'If iShow = True Then
  '  f_launcher.show
  'Endif
  
  ' If iShow = False Then
  '   f_launcher.Close
  ' Endif
  ' iShow = False
  
  'f_launcher.Close
  ' Endif
  
End

Public Sub mnuSendDesk_Click()
  ''
  
  M_Core.SendDesk
  
End

Public Sub mnuSendBook_Click()
  
  M_Core.SendBook
  
End

Public Sub mnuDelBookmark_Click()
  
  'Dim sExec As String = Last.tag
  'Dim sFile As String = Last.tag
  
  Shell "rm -r " & sDel
  
  ScrollApps.Children.Clear
  Wait 0.1
  App_Fav_Select
  
End

Public Sub PanInfo_Draw()
  
  Dim X, Y, W, H As Float
  Dim hBrush As PaintBrush
  Dim hImage As Image
  Dim hBackground As Image
  
  hImage = Image.Load("img/img_back1.png")
  hBackground = New Image(hImage.W, hImage.H, Color.SetAlpha(Color.TextBackground, 160))
  'hBackground.PaintImage(hImage, 0, 0)
  'Me.Picture = hBackground.Picture
  
  X = 0
  Y = 0
  W = PanInfo.w 
  H = PanInfo.w
  
  hBrush = Paint.Image(hImage)
  'hBrush.Translate(X, Y)
  ' hBrush.Scale(W / hImage.W / 2, H / hImage.H / 2)
  Paint.Brush = hBrush
  Paint.Rectangle(X, Y, W, H)
  Paint.Fill
  
End

Public Sub Form_Show()
  
  txtnameapp.Foreground = Color.White
  txtlabelInfo.Foreground = Color.White  
  
  'Settings_Core_Innova.Reload()
  
  Settings_Core_Innova.Write(f_launcher)
  Settings_Core_Innova["Launcher/iShow"] = "1"
  Settings_Core_Innova.Save
  ' m_core.FillList_Apps_Reset
  
End

Public Sub picBook_Enter()
  
  Dim iResult As Integer 
  
  picBook.Border = Border.Plain
  
  Try iResult = Settings_Core_Innova["Launcher/Cat_MouseMove"]
  
  If iResult = 1 Then
    App_Fav_Select
  Endif
  
End

Public Sub picBook_Leave()
  
  picBook.Border = Border.None
  
End

Public Sub picBook_MouseDown()
  
  Dim iResult As Integer 
  
  Try iResult = Settings_Core_Innova["Launcher/Cat_MouseMove"]
  
  If iResult = 0 Then
    App_Fav_Select  
  Endif
  
End

Public Sub picLaunch_Enter()
  
  picLaunch.Border = Border.Plain
  
End

Public Sub picLaunch_Leave()
  
  picLaunch.Border = Border.None
  
End

Public Sub picSettings_Enter()
  
  picSettings.Border = Border.Plain
  
End

Public Sub picSettings_Leave()
  
  picSettings.Border = Border.None
  
End

Public Sub picExpand_Enter()
  
  picExpand.Border = Border.Plain
  
End

Public Sub picExpand_Leave()
  
  picExpand.Border = Border.None
  
End

Public Sub PanelLauncher_MouseDown()
  
End

Public Sub picExpand_MouseDown()
  
  m_core.FillList_Apps_Reset
  Settings_Core_Innova.Write(f_launcher_mini)
  Settings_Core_Innova["Launcher/Style_Launcher"] = "Mini" 
  Settings_Core_Innova.Save
  
  f_launcher_mini.Show
  Wait 0.1
  Me.Close
  
End

Public Sub picLaunch_MouseDown()
  
  f_style_launcher.Show
  
End

Public Sub txtSearchApps_KeyPress()
  
  If Key.code = Key.Enter Or Key.Code = Key.Return Then
    Mouse.Move(txtSearchApps.ScreenX + 20, txtSearchApps.ScreenY + 10)
  Endif
  
End

Public Sub picSettings_MouseDown()
  
  Shell User.Home &/ "QSettings.gambas"
  
End

Public Sub GetAppNameCat(sApp As String, Language As String) As String
  
  Dim hAppCat As DesktopAppsCat = DesktopAppsCat[sApp]
  
  If hAppCat.GetName(Language) Then 
    Return hAppCat.GetName(Language)
  Else
    If hAppCat.GetGenericName(Language) Then
      Return hAppCat.GetGenericName(Language)
    Else
      If hAppCat.Name Then 
        Return hAppCat.Name
      Endif
    Endif
  Endif
  
  Return hAppCat.Name
Catch
  '  Debug "ERROR [ " & DConv(Error.Text) & " ]"
  
End

Public Sub IconViewCat_MouseMove()
  
  Dim iResult As Integer 
  Dim s As String
  Dim iResult_Text As Integer
  
  Try iResult = Settings_Core_Innova["Launcher/Cat_MouseMove"]
  Try iResult_Text = Settings_Core_Innova["Launcher/Show_Text"]
  
  If Not IconViewCat.FindAt(Mouse.x, Mouse.y) Then
    IconViewCat.Mouse = Mouse.Pointing
    
    If iResult = 1 Then
      f_launcher.PanInfo.Visible = False
      sGroup_Cat = DesktopAppsCat[Last.Item.key].Name
      M_Var_Global.sGroup_Cat = DesktopAppsCat[Last.Item.key].Name
      m_core.FillList_Apps
    Endif
    
    If iResult_Text = 0 Then
      s = GetAppNameCat(IconViewCat.Item.Key, sLang)
      IconViewCat.Tooltip = s
    Endif
  Endif
  
End

Public Sub IconViewCat_Select()
  
  sGroup_Cat = DesktopAppsCat[Last.key].Name
  M_Var_Global.sGroup_Cat = DesktopAppsCat[Last.key].Name
  m_core.FillList_Apps
  
End

Public Sub Form_Close()
  
  'Settings_Core_Innova.Reload()
  
  Settings_Core_Innova.Write(f_launcher)
  Settings_Core_Innova["Launcher/iShow"] = "0"
  Settings_Core_Innova.Save
  
End
